syntax = "proto3";

import "google/protobuf/empty.proto";

package protos;

option go_package = "github.com/krithikvaidya/distributed-dns/replicated_kv_store/protos";

message RequestVoteMessage {

    int32 term = 1;
    int32 candidateId = 2;
    int32 lastLogIndex = 3;
    int32 lastLogTerm = 4;

}

message RequestVoteResponse {

    int32 term = 1;
    bool voteGranted = 2;

}

/*
 * This is a format for representing a single log
 * entry. Each log entry contains the value, and the
 * term number, when it was added to the leader's log.
 */
message LogEntry {

    int32 term = 1;
    repeated string operation = 3;  // [HBEAT/POST/PUT/DELETE/NO-OP] [<id, optional>] [<value, optional>]

}

message AppendEntriesMessage {

    int32 term = 1;
    int32 leaderId = 2;

    int32 prevLogIndex = 3;
    int32 prevLogTerm = 4;
    
    int32 leaderCommit = 5;

    repeated LogEntry entries = 6;

}

message AppendEntriesResponse {

    int32 term = 1;
    bool success = 2;

}

service ConsensusService {

  rpc ReplicaReady(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc RequestVote(RequestVoteMessage) returns (RequestVoteResponse) {}
  rpc AppendEntries(AppendEntriesMessage) returns (AppendEntriesResponse) {}

}